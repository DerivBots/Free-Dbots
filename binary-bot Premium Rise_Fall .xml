<?xml version="1.0" encoding="UTF-8"?>
<trading_bot>
    <imports>
        <import>pandas as pd</import>
        <import>numpy as np</import>
    </imports>
    <functions>
        <function name="get_moving_average">
            <parameters>
                <parameter>data</parameter>
                <parameter>window</parameter>
            </parameters>
            <body>
                <return>data.rolling(window=window).mean()</return>
            </body>
        </function>
        <function name="generate_signals">
            <parameters>
                <parameter>data</parameter>
                <parameter>short_window</parameter>
                <parameter>long_window</parameter>
            </parameters>
            <body>
                <variable name="signals" type="pd.DataFrame">pd.DataFrame(index=data.index)</variable>
                <assignment>signals['price'] = data['Close']</assignment>
                <assignment>signals['short_mavg'] = get_moving_average(data['Close'], short_window)</assignment>
                <assignment>signals['long_mavg'] = get_moving_average(data['Close'], long_window)</assignment>
                <assignment>signals['signal'] = 0.0</assignment>
                <assignment>
                    signals['signal'][short_window:] = np.where(
                        signals['short_mavg'][short_window:] > signals['long_mavg'][short_window:], 
                        1.0, 
                        0.0
                    )
                </assignment>
                <assignment>signals['positions'] = signals['signal'].diff()</assignment>
                <return>signals</return>
            </body>
        </function>
        <function name="backtest_strategy">
            <parameters>
                <parameter>data</parameter>
                <parameter>signals</parameter>
                <parameter>initial_capital</parameter>
            </parameters>
            <body>
                <variable name="positions" type="pd.DataFrame">pd.DataFrame(index=signals.index).fillna(0.0)</variable>
                <assignment>positions['asset'] = signals['signal']</assignment>
                <variable name="portfolio" type="pd.DataFrame">positions.multiply(data['Close'], axis=0)</variable>
                <variable name="pos_diff" type="pd.DataFrame">positions.diff()</variable>
                <assignment>
                    portfolio['holdings'] = (positions.multiply(data['Close'], axis=0)).sum(axis=1)
                </assignment>
                <assignment>
                    portfolio['cash'] = initial_capital - (pos_diff.multiply(data['Close'], axis=0)).sum(axis=1).cumsum()
                </assignment>
                <assignment>portfolio['total'] = portfolio['cash'] + portfolio['holdings']</assignment>
                <return>portfolio</return>
            </body>
        </function>
    </functions>
    <main>
        <data>pd.read_csv('your_data.csv', index_col='Date', parse_dates=True)</data>
        <short_window>40</short_window>
        <long_window>100</long_window>
        <signals>generate_signals(data, short_window, long_window)</signals>
        <portfolio>backtest_strategy(data, signals)</portfolio>
        <output>
            <print>signals</print>
            <print>portfolio</print>
        </output>
    </main>
</trading_bot>
